{"version":3,"sources":["httplib.js","iconbuttonlib.js","app.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","useStyles","makeStyles","theme","button","margin","spacing","IconLabelButtons","variant","type","color","text","icon","handleClick","classes","Button","className","startIcon","onClick","IconButton","props","StatusBar","status","Alert","severity","Form","useState","error","message","nameError","setNameError","numberError","setNumberError","newName","setNewName","newNumber","setNewNumber","create_UUID","dt","Date","getTime","replace","c","r","Math","random","floor","toString","Input","name","value","placeholder","onChange","event","target","existingPerson","persons","filter","person","preventDefault","nameIsEmpty","isNameValid","numberIsEmpty","isNumberValid","validateForm","length","window","confirm","updatedPerson","number","http","returnedPerson","console","log","setStatus","setTimeout","newPersonList","oldArr","updatedEntry","newArr","i","updateArray","setPersons","setSearchResults","getSearchResults","searchTerm","catch","concat","Search","onInput","setSearchTerm","results","Numbers","handleDeleteClick","splice","removeFromArray","searchResults","map","key","App","useEffect","initialPersons","personList","criteria","toLowerCase","startsWith","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60def777.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteEntry = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteEntry }","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function IconLabelButtons(variant, type, color, text, icon, handleClick) {\n  const classes = useStyles();\n\n  return (\n      <Button\n        variant={variant}\n        type={type}\n        color={color}\n        className={classes.button}\n        startIcon={icon}\n        onClick={handleClick}\n      >\n        {text}\n      </Button>\n  );\n}\n","import './index.css';\n\nimport React, { useState, useEffect } from 'react';\nimport http from './httplib';\n\nimport IconLabelButtons from './iconbuttonlib';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Input from '@material-ui/core/Input';\nimport Alert from '@material-ui/lab/Alert';\n\nconst IconButton = (props) => {\n  return(\n    <span>\n      {IconLabelButtons(props.variant, props.type, props.color, props.text, props.icon, props.handleClick)}\n    </span>\n  )\n}\n\nconst StatusBar = (props) => {\n  if(props.status) {\n    return(\n      <Alert variant={props.variant} severity={props.status}>\n        {props.text}\n      </Alert>\n    )\n  } else {\n    return null;\n  }\n}\n\nconst Form = (props) => {\n  const [ nameError, setNameError ] = useState({error : false, message : ''});\n  const [ numberError, setNumberError ] = useState({error : false, message : ''});\n\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n\n  const updateNameInput = (event) => {\n    setNameError({error : false, message : ''});\n    setNewName(event.target.value);\n  }\n  const updateNumberInput = (event) => {\n    setNumberError({error : false, message : ''});\n    setNewNumber(event.target.value);\n  }\n\n  function create_UUID(){\n    let dt = new Date().getTime();\n    let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        let r = (dt + Math.random()*16)%16 | 0;\n        dt = Math.floor(dt/16);\n        return (c==='x' ? r :(r&0x3|0x8)).toString(16);\n    });\n    return uuid;\n  }\n\n  const checkIfNameExists = () => {\n    return props.persons.filter((person) => {\n      return person.name === newName\n    });\n  }\n\n  const validateForm = () => {\n    let nameIsEmpty = !newName;\n    let nameMessage = nameIsEmpty ? 'Field is required' : '';\n    let isNameValid = !nameIsEmpty;\n    setNameError({error : !isNameValid, message : nameMessage});\n\n    let numberIsEmpty = !newNumber;\n    let numberMessage = numberIsEmpty ? 'Field is required' : '';\n    let isNumberValid = !(numberIsEmpty);\n    setNumberError({error : !isNumberValid, message : numberMessage});\n    return (isNameValid && isNumberValid);\n  }\n\n  const updateArray = (oldArr, updatedEntry) => {\n    let newArr = [...oldArr];\n    let i = 0;\n    let length = newArr.length;\n    for(i; i < length; i++) {\n      if(newArr[i].id === updatedEntry.id) {\n        newArr[i] = updatedEntry;\n        break;\n      }\n    }\n    return newArr;\n  }\n\n  const handleSubmit = (event) => {\n    const existingPerson = checkIfNameExists();\n    event.preventDefault();\n    if(validateForm()) {\n        if(existingPerson.length > 0 && window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n          const updatedPerson = {...existingPerson[0]};\n          updatedPerson.number = newNumber;\n          http\n          .update(updatedPerson.id, updatedPerson)\n          .then(returnedPerson => {\n            console.log('promise fulfilled', returnedPerson);\n            props.setStatus({variant : \"filled\", status : \"success\", text : `Succesfully updated ${newName}`});\n            setTimeout(() => {         \n              props.setStatus({});  \n            }, 5000)\n            let newPersonList = updateArray(props.persons, returnedPerson);\n            props.setPersons(newPersonList);\n            props.setSearchResults(props.getSearchResults(newPersonList, props.searchTerm));\n            setNewName('');\n            setNewNumber('');\n          })\n          .catch(error => {\n            props.setStatus({variant : \"filled\", status : \"error\", text : `Oops something went wrong`});\n            setTimeout(() => {         \n              props.setStatus({});  \n            }, 5000)\n          })\n        } else if(existingPerson.length === 0) {\n          http\n          .create({ name : newName, number : newNumber, id : create_UUID() })\n          .then(returnedPerson => {\n            console.log('promise fulfilled', returnedPerson);\n            props.setStatus({variant : \"filled\", status : \"success\", text : `Succesfully added ${newName}`});\n            setTimeout(() => {         \n              props.setStatus({});  \n            }, 5000)\n            let newPersonList = [...props.persons].concat(returnedPerson);\n            props.setPersons(newPersonList);\n            props.setSearchResults(props.getSearchResults(newPersonList, props.searchTerm));\n            setNewName('');\n            setNewNumber('');\n          })\n          .catch(error => {\n            props.setStatus({variant : \"filled\", status : \"error\", text : `Oops something went wrong`});\n            setTimeout(() => {         \n              props.setStatus({});  \n            }, 5000)\n          })\n      }\n    }\n  }\n\n  return(\n    <form>\n      <div>\n       <Input error={nameError.error} name='Name' type=\"text\" value={newName} placeholder='name' onChange={updateNameInput}/>\n        <div>\n          <span className='error'>{nameError.message}</span>\n        </div>\n      </div>\n      <div>\n        <Input error={numberError.error} name='Number' type=\"text\" value={newNumber} placeholder='number' onChange={updateNumberInput}/>\n        <div>\n          <span className='error'>{numberError.message}</span>\n        </div>\n      </div>\n      <div>\n      {IconLabelButtons(\"contained\", \"submit\", \"primary\", \"add\", <AddIcon/>, handleSubmit)}\n      </div>\n    </form>\n  )\n}\n\nconst Search = (props) => {\n\n  const updateSearchInput = (event) => {\n    props.setSearchTerm(event.target.value);\n    let results = props.getSearchResults(props.persons, event.target.value);\n    props.setSearchResults(results);\n  }\n  \n  return(\n    <div>\n      <Input name='Search' value={props.searchTerm} type=\"text\" placeholder='enter a searchterm' onInput={updateSearchInput}/>\n    </div>\n  )\n}\n\nconst Numbers = (props) => {\n  \n  const removeFromArray = (oldArr, id) => {\n    let newArr = [...oldArr];\n    let i = 0;\n    let length = newArr.length;\n    for(i; i < length; i++) {\n      if(newArr[i].id === id) {\n        newArr.splice(i);\n        break;\n      }\n    }\n    return newArr;\n  }\n  \n  const handleDeleteClick = (name, id) => {\n    if(window.confirm(`Do you really want to delete ${name}`)) {\n      http\n      .deleteEntry(id)\n      .then(response => {\n        console.log('promise fulfilled', response);\n        props.setStatus({variant : \"filled\", status : \"success\", text : `Succesfully deleted ${name}`});\n        setTimeout(() => {         \n          props.setStatus({});  \n        }, 5000)\n        let newPersonList = removeFromArray(props.persons, id);\n        props.setPersons(newPersonList);\n        props.setSearchResults(props.getSearchResults(newPersonList, props.searchTerm));\n      })\n      .catch(error => {\n        props.setStatus({variant : \"filled\", status : \"error\", text : `Oops something went wrong`});\n        setTimeout(() => {         \n          props.setStatus({});  \n        }, 5000)\n      })\n    }\n  }\n  \n  return(\n    <div>\n      {props.searchResults.map((person) => {\n        return (\n          <li \n            key={person.id}>{person.name} {person.number} <IconButton variant=\"contained\" type=\"button\" color=\"primary\" text=\"delete\" icon={<DeleteIcon/>} handleClick={() => handleDeleteClick(person.name, person.id)} />\n          </li>)\n      })}\n    </div>\n  )\n}\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([]);\n\n  const [ status, setStatus ] = useState({});\n\n  useEffect(() => {\n    http\n      .getAll()\n      .then(initialPersons => {\n        console.log('promise fulfilled', initialPersons);\n        setStatus({variant : \"filled\", status : \"success\", text : \"Succesfully retrieved phonebook\"});\n        setTimeout(() => {         \n          setStatus({});  \n        }, 5000)\n        setPersons(initialPersons);\n        setSearchResults(initialPersons);\n      })\n      .catch(error => {\n        setStatus({variant : \"filled\", status : \"error\", text : `Oops something went wrong`});\n        setTimeout(() => {         \n          setStatus({});  \n        }, 5000)\n      })\n  }, [])\n\n  const [ searchResults, setSearchResults ] = useState([...persons]);\n  const getSearchResults = (personList, criteria) => personList.filter((person) => person.name.toLowerCase().startsWith(criteria.toLowerCase()));\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Search persons={persons} setPersons={setPersons} searchTerm={searchTerm} setSearchTerm={setSearchTerm} searchResults={searchResults} setSearchResults={setSearchResults} getSearchResults={getSearchResults} />\n      <br></br>\n      <Form persons={persons} setPersons={setPersons} searchTerm={searchTerm} searchResults={searchResults} setSearchResults={setSearchResults} getSearchResults={getSearchResults} setStatus={setStatus} />\n      <h2>Numbers</h2>\n      <Numbers searchResults={searchResults} persons={persons} setPersons={setPersons} searchTerm={searchTerm} setSearchResults={setSearchResults} getSearchResults={getSearchResults} setStatus={setStatus} />\n      <StatusBar variant={status.variant} status={status.status} text={status.text} />\n    </div>\n  )\n}\n\nexport default App","import App from './app'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}