{"ast":null,"code":"var _jsxFileName = \"/Users/ludo/React/part2/phonebook/src/app.js\";\nimport './index.css';\nimport React, { useState, useEffect } from 'react';\nimport http from './httplib';\nimport IconLabelButtons from './iconbuttonlib';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Input from '@material-ui/core/Input';\nimport Alert from '@material-ui/lab/Alert';\n\nconst IconButton = props => {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, IconLabelButtons(props.variant, props.type, props.color, props.text, props.icon, props.handleClick));\n};\n\nconst StatusBar = props => {\n  if (props.status) {\n    return /*#__PURE__*/React.createElement(Alert, {\n      variant: props.variant,\n      severity: props.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, props.text);\n  } else {\n    return null;\n  }\n};\n\nconst Form = props => {\n  const [nameError, setNameError] = useState({\n    error: false,\n    message: ''\n  });\n  const [numberError, setNumberError] = useState({\n    error: false,\n    message: ''\n  });\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  const updateNameInput = event => {\n    setNameError({\n      error: false,\n      message: ''\n    });\n    setNewName(event.target.value);\n  };\n\n  const updateNumberInput = event => {\n    setNumberError({\n      error: false,\n      message: ''\n    });\n    setNewNumber(event.target.value);\n  };\n\n  function create_UUID() {\n    let dt = new Date().getTime();\n    let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      let r = (dt + Math.random() * 16) % 16 | 0;\n      dt = Math.floor(dt / 16);\n      return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n    });\n    return uuid;\n  }\n\n  const checkIfNameExists = () => {\n    return props.persons.filter(person => {\n      return person.name === newName;\n    });\n  };\n\n  const validateForm = () => {\n    let nameIsEmpty = !newName;\n    let nameMessage = nameIsEmpty ? 'Field is required' : '';\n    let isNameValid = !nameIsEmpty;\n    setNameError({\n      error: !isNameValid,\n      message: nameMessage\n    });\n    let numberIsEmpty = !newNumber;\n    let numberMessage = numberIsEmpty ? 'Field is required' : '';\n    let isNumberValid = !numberIsEmpty;\n    setNumberError({\n      error: !isNumberValid,\n      message: numberMessage\n    });\n    return isNameValid && isNumberValid;\n  };\n\n  const updateArray = (oldArr, updatedEntry) => {\n    let newArr = [...oldArr];\n    let i = 0;\n    let length = newArr.length;\n\n    for (i; i < length; i++) {\n      if (newArr[i].id === updatedEntry.id) {\n        newArr[i] = updatedEntry;\n        break;\n      }\n    }\n\n    return newArr;\n  };\n\n  const handleSubmit = event => {\n    const existingPerson = checkIfNameExists();\n    event.preventDefault();\n\n    if (validateForm()) {\n      if (existingPerson.length > 0 && window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const updatedPerson = { ...existingPerson[0]\n        };\n        updatedPerson.number = newNumber;\n        http.update(updatedPerson.id, updatedPerson).then(returnedPerson => {\n          console.log('promise fulfilled', returnedPerson);\n          props.setStatus({\n            variant: \"filled\",\n            status: \"success\",\n            text: `Succesfully updated ${newName}`\n          });\n          setTimeout(() => {\n            props.setStatus({});\n          }, 5000);\n          let newPersonList = updateArray(props.persons, returnedPerson);\n          props.setPersons(newPersonList);\n          props.setSearchResults(props.getSearchResults(newPersonList, props.searchTerm));\n          setNewName('');\n          setNewNumber('');\n        }).catch(error => {\n          props.setStatus({\n            variant: \"filled\",\n            status: \"error\",\n            text: `Oops something went wrong`\n          });\n          setTimeout(() => {\n            props.setStatus({});\n          }, 5000);\n        });\n      } else if (existingPerson.length === 0) {\n        http.create({\n          name: newName,\n          number: newNumber,\n          id: create_UUID()\n        }).then(returnedPerson => {\n          console.log('promise fulfilled', returnedPerson);\n          props.setStatus({\n            variant: \"filled\",\n            status: \"success\",\n            text: `Succesfully added ${newName}`\n          });\n          setTimeout(() => {\n            props.setStatus({});\n          }, 5000);\n          let newPersonList = [...props.persons].concat(returnedPerson);\n          props.setPersons(newPersonList);\n          props.setSearchResults(props.getSearchResults(newPersonList, props.searchTerm));\n          setNewName('');\n          setNewNumber('');\n        }).catch(error => {\n          props.setStatus({\n            variant: \"filled\",\n            status: \"error\",\n            text: `Oops something went wrong`\n          });\n          setTimeout(() => {\n            props.setStatus({});\n          }, 5000);\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    error: nameError.error,\n    name: \"Name\",\n    type: \"text\",\n    value: newName,\n    placeholder: \"name\",\n    onChange: updateNameInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, nameError.message))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    error: numberError.error,\n    name: \"Number\",\n    type: \"text\",\n    value: newNumber,\n    placeholder: \"number\",\n    onChange: updateNumberInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, numberError.message))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, IconLabelButtons(\"contained\", \"submit\", \"primary\", \"add\", /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 66\n    }\n  }), handleSubmit)));\n};\n\nconst Search = props => {\n  const updateSearchInput = event => {\n    props.setSearchTerm(event.target.value);\n    let results = props.getSearchResults(props.persons, event.target.value);\n    props.setSearchResults(results);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"Search\",\n    value: props.searchTerm,\n    type: \"text\",\n    placeholder: \"enter a searchterm\",\n    onInput: updateSearchInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Numbers = props => {\n  const removeFromArray = (oldArr, id) => {\n    let newArr = [...oldArr];\n    let i = 0;\n    let length = newArr.length;\n\n    for (i; i < length; i++) {\n      if (newArr[i].id === id) {\n        newArr.splice(i);\n        break;\n      }\n    }\n\n    return newArr;\n  };\n\n  const handleDeleteClick = (name, id) => {\n    if (window.confirm(`Do you really want to delete ${name}`)) {\n      http.deleteEntry(id).then(response => {\n        console.log('promise fulfilled', response);\n        props.setStatus({\n          variant: \"filled\",\n          status: \"success\",\n          text: `Succesfully deleted ${name}`\n        });\n        setTimeout(() => {\n          props.setStatus({});\n        }, 5000);\n        let newPersonList = removeFromArray(props.persons, id);\n        props.setPersons(newPersonList);\n        props.setSearchResults(props.getSearchResults(newPersonList, props.searchTerm));\n      }).catch(error => {\n        props.setStatus({\n          variant: \"filled\",\n          status: \"error\",\n          text: `Oops something went wrong`\n        });\n        setTimeout(() => {\n          props.setStatus({});\n        }, 5000);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, props.searchResults.map(person => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: person.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, person.name, \" \", person.number, \" \", /*#__PURE__*/React.createElement(IconButton, {\n      variant: \"contained\",\n      type: \"button\",\n      color: \"primary\",\n      text: \"delete\",\n      icon: /*#__PURE__*/React.createElement(DeleteIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 141\n        }\n      }),\n      handleClick: () => handleDeleteClick(person.name, person.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 59\n      }\n    }));\n  }));\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [status, setStatus] = useState({});\n  useEffect(() => {\n    http.getAll().then(initialPersons => {\n      console.log('promise fulfilled', initialPersons);\n      setStatus({\n        variant: \"filled\",\n        status: \"success\",\n        text: \"Succesfully retrieved phonebook\"\n      });\n      setTimeout(() => {\n        setStatus({});\n      }, 5000);\n      setPersons(initialPersons);\n      setSearchResults(initialPersons);\n    }).catch(error => {\n      setStatus({\n        variant: \"filled\",\n        status: \"error\",\n        text: `Oops something went wrong`\n      });\n      setTimeout(() => {\n        setStatus({});\n      }, 5000);\n    });\n  }, []);\n  const [searchResults, setSearchResults] = useState([...persons]);\n\n  const getSearchResults = (personList, criteria) => personList.filter(person => person.name.toLowerCase().startsWith(criteria.toLowerCase()));\n\n  const [searchTerm, setSearchTerm] = useState('');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(Search, {\n    persons: persons,\n    setPersons: setPersons,\n    searchTerm: searchTerm,\n    setSearchTerm: setSearchTerm,\n    searchResults: searchResults,\n    setSearchResults: setSearchResults,\n    getSearchResults: getSearchResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    persons: persons,\n    setPersons: setPersons,\n    searchTerm: searchTerm,\n    searchResults: searchResults,\n    setSearchResults: setSearchResults,\n    getSearchResults: getSearchResults,\n    setStatus: setStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(Numbers, {\n    searchResults: searchResults,\n    persons: persons,\n    setPersons: setPersons,\n    searchTerm: searchTerm,\n    setSearchResults: setSearchResults,\n    getSearchResults: getSearchResults,\n    setStatus: setStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StatusBar, {\n    variant: status.variant,\n    status: status.status,\n    text: status.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ludo/React/part2/phonebook/src/app.js"],"names":["React","useState","useEffect","http","IconLabelButtons","AddIcon","DeleteIcon","Input","Alert","IconButton","props","variant","type","color","text","icon","handleClick","StatusBar","status","Form","nameError","setNameError","error","message","numberError","setNumberError","newName","setNewName","newNumber","setNewNumber","updateNameInput","event","target","value","updateNumberInput","create_UUID","dt","Date","getTime","uuid","replace","c","r","Math","random","floor","toString","checkIfNameExists","persons","filter","person","name","validateForm","nameIsEmpty","nameMessage","isNameValid","numberIsEmpty","numberMessage","isNumberValid","updateArray","oldArr","updatedEntry","newArr","i","length","id","handleSubmit","existingPerson","preventDefault","window","confirm","updatedPerson","number","update","then","returnedPerson","console","log","setStatus","setTimeout","newPersonList","setPersons","setSearchResults","getSearchResults","searchTerm","catch","create","concat","Search","updateSearchInput","setSearchTerm","results","Numbers","removeFromArray","splice","handleDeleteClick","deleteEntry","response","searchResults","map","App","getAll","initialPersons","personList","criteria","toLowerCase","startsWith"],"mappings":"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","sourcesContent":["import './index.css';\n\nimport React, { useState, useEffect } from 'react';\nimport http from './httplib';\n\nimport IconLabelButtons from './iconbuttonlib';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Input from '@material-ui/core/Input';\nimport Alert from '@material-ui/lab/Alert';\n\nconst IconButton = (props) => {\n  return(\n    <span>\n      {IconLabelButtons(props.variant, props.type, props.color, props.text, props.icon, props.handleClick)}\n    </span>\n  )\n}\n\nconst StatusBar = (props) => {\n  if(props.status) {\n    return(\n      <Alert variant={props.variant} severity={props.status}>\n        {props.text}\n      </Alert>\n    )\n  } else {\n    return null;\n  }\n}\n\nconst Form = (props) => {\n  const [ nameError, setNameError ] = useState({error : false, message : ''});\n  const [ numberError, setNumberError ] = useState({error : false, message : ''});\n\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n\n  const updateNameInput = (event) => {\n    setNameError({error : false, message : ''});\n    setNewName(event.target.value);\n  }\n  const updateNumberInput = (event) => {\n    setNumberError({error : false, message : ''});\n    setNewNumber(event.target.value);\n  }\n\n  function create_UUID(){\n    let dt = new Date().getTime();\n    let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        let r = (dt + Math.random()*16)%16 | 0;\n        dt = Math.floor(dt/16);\n        return (c==='x' ? r :(r&0x3|0x8)).toString(16);\n    });\n    return uuid;\n  }\n\n  const checkIfNameExists = () => {\n    return props.persons.filter((person) => {\n      return person.name === newName\n    });\n  }\n\n  const validateForm = () => {\n    let nameIsEmpty = !newName;\n    let nameMessage = nameIsEmpty ? 'Field is required' : '';\n    let isNameValid = !nameIsEmpty;\n    setNameError({error : !isNameValid, message : nameMessage});\n\n    let numberIsEmpty = !newNumber;\n    let numberMessage = numberIsEmpty ? 'Field is required' : '';\n    let isNumberValid = !(numberIsEmpty);\n    setNumberError({error : !isNumberValid, message : numberMessage});\n    return (isNameValid && isNumberValid);\n  }\n\n  const updateArray = (oldArr, updatedEntry) => {\n    let newArr = [...oldArr];\n    let i = 0;\n    let length = newArr.length;\n    for(i; i < length; i++) {\n      if(newArr[i].id === updatedEntry.id) {\n        newArr[i] = updatedEntry;\n        break;\n      }\n    }\n    return newArr;\n  }\n\n  const handleSubmit = (event) => {\n    const existingPerson = checkIfNameExists();\n    event.preventDefault();\n    if(validateForm()) {\n        if(existingPerson.length > 0 && window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n          const updatedPerson = {...existingPerson[0]};\n          updatedPerson.number = newNumber;\n          http\n          .update(updatedPerson.id, updatedPerson)\n          .then(returnedPerson => {\n            console.log('promise fulfilled', returnedPerson);\n            props.setStatus({variant : \"filled\", status : \"success\", text : `Succesfully updated ${newName}`});\n            setTimeout(() => {         \n              props.setStatus({});  \n            }, 5000)\n            let newPersonList = updateArray(props.persons, returnedPerson);\n            props.setPersons(newPersonList);\n            props.setSearchResults(props.getSearchResults(newPersonList, props.searchTerm));\n            setNewName('');\n            setNewNumber('');\n          })\n          .catch(error => {\n            props.setStatus({variant : \"filled\", status : \"error\", text : `Oops something went wrong`});\n            setTimeout(() => {         \n              props.setStatus({});  \n            }, 5000)\n          })\n        } else if(existingPerson.length === 0) {\n          http\n          .create({ name : newName, number : newNumber, id : create_UUID() })\n          .then(returnedPerson => {\n            console.log('promise fulfilled', returnedPerson);\n            props.setStatus({variant : \"filled\", status : \"success\", text : `Succesfully added ${newName}`});\n            setTimeout(() => {         \n              props.setStatus({});  \n            }, 5000)\n            let newPersonList = [...props.persons].concat(returnedPerson);\n            props.setPersons(newPersonList);\n            props.setSearchResults(props.getSearchResults(newPersonList, props.searchTerm));\n            setNewName('');\n            setNewNumber('');\n          })\n          .catch(error => {\n            props.setStatus({variant : \"filled\", status : \"error\", text : `Oops something went wrong`});\n            setTimeout(() => {         \n              props.setStatus({});  \n            }, 5000)\n          })\n      }\n    }\n  }\n\n  return(\n    <form>\n      <div>\n       <Input error={nameError.error} name='Name' type=\"text\" value={newName} placeholder='name' onChange={updateNameInput}/>\n        <div>\n          <span className='error'>{nameError.message}</span>\n        </div>\n      </div>\n      <div>\n        <Input error={numberError.error} name='Number' type=\"text\" value={newNumber} placeholder='number' onChange={updateNumberInput}/>\n        <div>\n          <span className='error'>{numberError.message}</span>\n        </div>\n      </div>\n      <div>\n      {IconLabelButtons(\"contained\", \"submit\", \"primary\", \"add\", <AddIcon/>, handleSubmit)}\n      </div>\n    </form>\n  )\n}\n\nconst Search = (props) => {\n\n  const updateSearchInput = (event) => {\n    props.setSearchTerm(event.target.value);\n    let results = props.getSearchResults(props.persons, event.target.value);\n    props.setSearchResults(results);\n  }\n  \n  return(\n    <div>\n      <Input name='Search' value={props.searchTerm} type=\"text\" placeholder='enter a searchterm' onInput={updateSearchInput}/>\n    </div>\n  )\n}\n\nconst Numbers = (props) => {\n  \n  const removeFromArray = (oldArr, id) => {\n    let newArr = [...oldArr];\n    let i = 0;\n    let length = newArr.length;\n    for(i; i < length; i++) {\n      if(newArr[i].id === id) {\n        newArr.splice(i);\n        break;\n      }\n    }\n    return newArr;\n  }\n  \n  const handleDeleteClick = (name, id) => {\n    if(window.confirm(`Do you really want to delete ${name}`)) {\n      http\n      .deleteEntry(id)\n      .then(response => {\n        console.log('promise fulfilled', response);\n        props.setStatus({variant : \"filled\", status : \"success\", text : `Succesfully deleted ${name}`});\n        setTimeout(() => {         \n          props.setStatus({});  \n        }, 5000)\n        let newPersonList = removeFromArray(props.persons, id);\n        props.setPersons(newPersonList);\n        props.setSearchResults(props.getSearchResults(newPersonList, props.searchTerm));\n      })\n      .catch(error => {\n        props.setStatus({variant : \"filled\", status : \"error\", text : `Oops something went wrong`});\n        setTimeout(() => {         \n          props.setStatus({});  \n        }, 5000)\n      })\n    }\n  }\n  \n  return(\n    <div>\n      {props.searchResults.map((person) => {\n        return (\n          <li \n            key={person.id}>{person.name} {person.number} <IconButton variant=\"contained\" type=\"button\" color=\"primary\" text=\"delete\" icon={<DeleteIcon/>} handleClick={() => handleDeleteClick(person.name, person.id)} />\n          </li>)\n      })}\n    </div>\n  )\n}\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([]);\n\n  const [ status, setStatus ] = useState({});\n\n  useEffect(() => {\n    http\n      .getAll()\n      .then(initialPersons => {\n        console.log('promise fulfilled', initialPersons);\n        setStatus({variant : \"filled\", status : \"success\", text : \"Succesfully retrieved phonebook\"});\n        setTimeout(() => {         \n          setStatus({});  \n        }, 5000)\n        setPersons(initialPersons);\n        setSearchResults(initialPersons);\n      })\n      .catch(error => {\n        setStatus({variant : \"filled\", status : \"error\", text : `Oops something went wrong`});\n        setTimeout(() => {         \n          setStatus({});  \n        }, 5000)\n      })\n  }, [])\n\n  const [ searchResults, setSearchResults ] = useState([...persons]);\n  const getSearchResults = (personList, criteria) => personList.filter((person) => person.name.toLowerCase().startsWith(criteria.toLowerCase()));\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Search persons={persons} setPersons={setPersons} searchTerm={searchTerm} setSearchTerm={setSearchTerm} searchResults={searchResults} setSearchResults={setSearchResults} getSearchResults={getSearchResults} />\n      <br></br>\n      <Form persons={persons} setPersons={setPersons} searchTerm={searchTerm} searchResults={searchResults} setSearchResults={setSearchResults} getSearchResults={getSearchResults} setStatus={setStatus} />\n      <h2>Numbers</h2>\n      <Numbers searchResults={searchResults} persons={persons} setPersons={setPersons} searchTerm={searchTerm} setSearchResults={setSearchResults} getSearchResults={getSearchResults} setStatus={setStatus} />\n      <StatusBar variant={status.variant} status={status.status} text={status.text} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}