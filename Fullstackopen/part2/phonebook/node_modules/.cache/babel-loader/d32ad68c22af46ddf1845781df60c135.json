{"ast":null,"code":"var _jsxFileName = \"/Users/ludo/React/part2/phonebook/src/app.js\";\nimport './index.css';\nimport React, { useState, useEffect } from 'react';\nimport http from './httplib';\nimport IconLabelButtons from './iconbuttonlib';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Input from '@material-ui/core/Input';\n\nconst IconButton = props => {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, IconLabelButtons(props.variant, props.type, props.color, props.text, props.icon, props.handleClick));\n};\n\nconst Form = props => {\n  const [nameError, setNameError] = useState({\n    error: false,\n    message: ''\n  });\n  const [numberError, setNumberError] = useState({\n    error: false,\n    message: ''\n  });\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  const updateNameInput = event => {\n    setNameError({\n      error: false,\n      message: ''\n    });\n    setNewName(event.target.value);\n  };\n\n  const updateNumberInput = event => {\n    setNumberError({\n      error: false,\n      message: ''\n    });\n    setNewNumber(event.target.value);\n  };\n\n  function create_UUID() {\n    var dt = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = (dt + Math.random() * 16) % 16 | 0;\n      dt = Math.floor(dt / 16);\n      return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n    });\n    return uuid;\n  }\n\n  const checkIfNameExists = () => {\n    return props.persons.filter(person => {\n      return person.name === newName;\n    });\n  };\n\n  const validateForm = () => {\n    let nameIsEmpty = !newName;\n    let nameMessage = nameIsEmpty ? 'Field is required' : '';\n    let isNameValid = !nameIsEmpty;\n    setNameError({\n      error: !isNameValid,\n      message: nameMessage\n    });\n    let numberIsEmpty = !newNumber;\n    let numberMessage = numberIsEmpty ? 'Field is required' : '';\n    let isNumberValid = !numberIsEmpty;\n    setNumberError({\n      error: !isNumberValid,\n      message: numberMessage\n    });\n    return isNameValid && isNumberValid;\n  };\n\n  const handleSubmit = event => {\n    const existingPerson = checkIfNameExists();\n    event.preventDefault();\n\n    if (validateForm()) {\n      if (existingPerson.length > 0 && window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const updatedPerson = { ...existingPerson[0]\n        };\n        updatedPerson.number = newNumber;\n        http.update(updatedPerson.id, updatedPerson).then(returnedPerson => {\n          console.log('promise fulfilled', returnedPerson);\n          let newPersonList = [...props.persons].concat(returnedPerson);\n          props.setPersons(newPersonList);\n          props.setSearchResults(props.getSearchResults(newPersonList, props.searchTerm));\n          setNewName('');\n          setNewNumber('');\n        });\n      } else if (existingPerson.length === 0) {\n        http.create({\n          name: newName,\n          number: newNumber,\n          id: create_UUID()\n        }).then(returnedPerson => {\n          console.log('promise fulfilled', returnedPerson);\n          let newPersonList = [...props.persons].concat(returnedPerson);\n          props.setPersons(newPersonList);\n          props.setSearchResults(props.getSearchResults(newPersonList, props.searchTerm));\n          setNewName('');\n          setNewNumber('');\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    error: nameError.error,\n    name: \"Name\",\n    type: \"text\",\n    value: newName,\n    placeholder: \"name\",\n    onChange: updateNameInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, nameError.message))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    error: numberError.error,\n    name: \"Number\",\n    type: \"text\",\n    value: newNumber,\n    placeholder: \"number\",\n    onChange: updateNumberInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, numberError.message))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, IconLabelButtons(\"contained\", \"submit\", \"primary\", \"add\", /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 66\n    }\n  }), handleSubmit)));\n};\n\nconst Search = props => {\n  const updateSearchInput = event => {\n    props.setSearchTerm(event.target.value);\n    let results = props.getSearchResults(props.persons, event.target.value);\n    props.setSearchResults(results);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"Search\",\n    value: props.searchTerm,\n    type: \"text\",\n    placeholder: \"enter a searchterm\",\n    onInput: updateSearchInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Numbers = props => {\n  const removeFromArray = (oldArr, id) => {\n    let newArr = [...oldArr];\n    let i = 0;\n    let length = newArr.length;\n\n    for (i; i < length; i++) {\n      if (newArr[i].id === id) {\n        newArr.splice(i);\n        break;\n      }\n    }\n\n    return newArr;\n  };\n\n  const handleDeleteClick = (name, id) => {\n    if (window.confirm(`Do you really want to delete ${name}`)) {\n      http.deleteEntry(id).then(response => {\n        console.log('promise fulfilled', response);\n        let newPersonList = removeFromArray(props.persons, id);\n        props.setPersons(newPersonList);\n        props.setSearchResults(props.getSearchResults(newPersonList, props.searchTerm));\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, props.searchResults.map(person => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: person.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, person.name, \" \", person.number, \" \", /*#__PURE__*/React.createElement(IconButton, {\n      variant: \"contained\",\n      type: \"button\",\n      color: \"primary\",\n      text: \"delete\",\n      icon: /*#__PURE__*/React.createElement(DeleteIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 141\n        }\n      }),\n      handleClick: () => handleDeleteClick(person.name, person.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 59\n      }\n    }));\n  }));\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  useEffect(() => {\n    http.getAll().then(initialPersons => {\n      console.log('promise fulfilled', initialPersons);\n      setPersons(initialPersons);\n      setSearchResults(initialPersons);\n    });\n  }, []);\n  const [searchResults, setSearchResults] = useState([...persons]);\n\n  const getSearchResults = (personList, criteria) => personList.filter(person => person.name.toLowerCase().startsWith(criteria.toLowerCase()));\n\n  const [searchTerm, setSearchTerm] = useState('');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(Search, {\n    persons: persons,\n    setPersons: setPersons,\n    searchTerm: searchTerm,\n    setSearchTerm: setSearchTerm,\n    searchResults: searchResults,\n    setSearchResults: setSearchResults,\n    getSearchResults: getSearchResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    persons: persons,\n    setPersons: setPersons,\n    searchTerm: searchTerm,\n    searchResults: searchResults,\n    setSearchResults: setSearchResults,\n    getSearchResults: getSearchResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(Numbers, {\n    searchResults: searchResults,\n    persons: persons,\n    setPersons: setPersons,\n    searchTerm: searchTerm,\n    setSearchResults: setSearchResults,\n    getSearchResults: getSearchResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ludo/React/part2/phonebook/src/app.js"],"names":["React","useState","useEffect","http","IconLabelButtons","AddIcon","DeleteIcon","Input","IconButton","props","variant","type","color","text","icon","handleClick","Form","nameError","setNameError","error","message","numberError","setNumberError","newName","setNewName","newNumber","setNewNumber","updateNameInput","event","target","value","updateNumberInput","create_UUID","dt","Date","getTime","uuid","replace","c","r","Math","random","floor","toString","checkIfNameExists","persons","filter","person","name","validateForm","nameIsEmpty","nameMessage","isNameValid","numberIsEmpty","numberMessage","isNumberValid","handleSubmit","existingPerson","preventDefault","length","window","confirm","updatedPerson","number","update","id","then","returnedPerson","console","log","newPersonList","concat","setPersons","setSearchResults","getSearchResults","searchTerm","create","Search","updateSearchInput","setSearchTerm","results","Numbers","removeFromArray","oldArr","newArr","i","splice","handleDeleteClick","deleteEntry","response","searchResults","map","App","getAll","initialPersons","personList","criteria","toLowerCase","startsWith"],"mappings":"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","sourcesContent":["import './index.css';\n\nimport React, { useState, useEffect } from 'react';\nimport http from './httplib';\n\nimport IconLabelButtons from './iconbuttonlib';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Input from '@material-ui/core/Input';\n\nconst IconButton = (props) => {\n  return(\n    <span>\n      {IconLabelButtons(props.variant, props.type, props.color, props.text, props.icon, props.handleClick)}\n    </span>\n  )\n}\n\nconst Form = (props) => {\n  const [ nameError, setNameError ] = useState({error : false, message : ''});\n  const [ numberError, setNumberError ] = useState({error : false, message : ''});\n\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n\n  const updateNameInput = (event) => {\n    setNameError({error : false, message : ''});\n    setNewName(event.target.value);\n  }\n  const updateNumberInput = (event) => {\n    setNumberError({error : false, message : ''});\n    setNewNumber(event.target.value);\n  }\n\n  function create_UUID(){\n    var dt = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (dt + Math.random()*16)%16 | 0;\n        dt = Math.floor(dt/16);\n        return (c==='x' ? r :(r&0x3|0x8)).toString(16);\n    });\n    return uuid;\n  }\n\n  const checkIfNameExists = () => {\n    return props.persons.filter((person) => {\n      return person.name === newName\n    });\n  }\n\n  const validateForm = () => {\n    let nameIsEmpty = !newName;\n    let nameMessage = nameIsEmpty ? 'Field is required' : '';\n    let isNameValid = !nameIsEmpty;\n    setNameError({error : !isNameValid, message : nameMessage});\n\n    let numberIsEmpty = !newNumber;\n    let numberMessage = numberIsEmpty ? 'Field is required' : '';\n    let isNumberValid = !(numberIsEmpty);\n    setNumberError({error : !isNumberValid, message : numberMessage});\n    return (isNameValid && isNumberValid);\n  }\n\n  const handleSubmit = (event) => {\n    const existingPerson = checkIfNameExists();\n    event.preventDefault();\n    if(validateForm()) {\n        if(existingPerson.length > 0 && window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n          const updatedPerson = {...existingPerson[0]};\n          updatedPerson.number = newNumber;\n          http\n          .update(updatedPerson.id, updatedPerson)\n          .then(returnedPerson => {\n            console.log('promise fulfilled', returnedPerson);\n            let newPersonList = [...props.persons].concat(returnedPerson);\n            props.setPersons(newPersonList);\n            props.setSearchResults(props.getSearchResults(newPersonList, props.searchTerm));\n            setNewName('');\n            setNewNumber('');\n          })\n        } else if(existingPerson.length === 0) {\n          http\n          .create({ name : newName, number : newNumber, id : create_UUID() })\n          .then(returnedPerson => {\n            console.log('promise fulfilled', returnedPerson);\n            let newPersonList = [...props.persons].concat(returnedPerson);\n            props.setPersons(newPersonList);\n            props.setSearchResults(props.getSearchResults(newPersonList, props.searchTerm));\n            setNewName('');\n            setNewNumber('');\n          })\n      }\n    }\n  }\n\n  return(\n    <form>\n      <div>\n       <Input error={nameError.error} name='Name' type=\"text\" value={newName} placeholder='name' onChange={updateNameInput}/>\n        <div>\n          <span className='error'>{nameError.message}</span>\n        </div>\n      </div>\n      <div>\n        <Input error={numberError.error} name='Number' type=\"text\" value={newNumber} placeholder='number' onChange={updateNumberInput}/>\n        <div>\n          <span className='error'>{numberError.message}</span>\n        </div>\n      </div>\n      <div>\n      {IconLabelButtons(\"contained\", \"submit\", \"primary\", \"add\", <AddIcon/>, handleSubmit)}\n      </div>\n    </form>\n  )\n}\n\nconst Search = (props) => {\n\n  const updateSearchInput = (event) => {\n    props.setSearchTerm(event.target.value);\n    let results = props.getSearchResults(props.persons, event.target.value);\n    props.setSearchResults(results);\n  }\n  \n  return(\n    <div>\n      <Input name='Search' value={props.searchTerm} type=\"text\" placeholder='enter a searchterm' onInput={updateSearchInput}/>\n    </div>\n  )\n}\n\nconst Numbers = (props) => {\n  \n  const removeFromArray = (oldArr, id) => {\n    let newArr = [...oldArr];\n    let i = 0;\n    let length = newArr.length;\n    for(i; i < length; i++) {\n      if(newArr[i].id === id) {\n        newArr.splice(i);\n        break;\n      }\n    }\n    return newArr;\n  }\n  \n  const handleDeleteClick = (name, id) => {\n    if(window.confirm(`Do you really want to delete ${name}`)) {\n      http\n      .deleteEntry(id)\n      .then(response => {\n        console.log('promise fulfilled', response);\n        let newPersonList = removeFromArray(props.persons, id);\n        props.setPersons(newPersonList);\n        props.setSearchResults(props.getSearchResults(newPersonList, props.searchTerm));\n      })\n    }\n  }\n  \n  return(\n    <div>\n      {props.searchResults.map((person) => {\n        return (\n          <li \n            key={person.id}>{person.name} {person.number} <IconButton variant=\"contained\" type=\"button\" color=\"primary\" text=\"delete\" icon={<DeleteIcon/>} handleClick={() => handleDeleteClick(person.name, person.id)} />\n          </li>)\n      })}\n    </div>\n  )\n}\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([]);\n\n  useEffect(() => {\n    http\n      .getAll()\n      .then(initialPersons => {\n        console.log('promise fulfilled', initialPersons);\n        setPersons(initialPersons);\n        setSearchResults(initialPersons);\n      })\n  }, [])\n\n  const [ searchResults, setSearchResults ] = useState([...persons]);\n  const getSearchResults = (personList, criteria) => personList.filter((person) => person.name.toLowerCase().startsWith(criteria.toLowerCase()));\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Search persons={persons} setPersons={setPersons} searchTerm={searchTerm} setSearchTerm={setSearchTerm} searchResults={searchResults} setSearchResults={setSearchResults} getSearchResults={getSearchResults} />\n      <br></br>\n      <Form persons={persons} setPersons={setPersons} searchTerm={searchTerm} searchResults={searchResults} setSearchResults={setSearchResults} getSearchResults={getSearchResults} />\n      <h2>Numbers</h2>\n      <Numbers searchResults={searchResults} persons={persons} setPersons={setPersons} searchTerm={searchTerm} setSearchResults={setSearchResults} getSearchResults={getSearchResults} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}