{"ast":null,"code":"var _jsxFileName = \"/Users/ludo/React/part2/countries/src/app.js\";\nimport './index.css';\nimport React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport Input from '@material-ui/core/Input';\nimport IconLabelButtons from './iconbuttonlib';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nconst IconButton = props => {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, IconLabelButtons(props.variant, props.type, props.color, props.text, props.icon, props.handleClick));\n};\n\nconst Weather = props => {\n  const api_key = process.env.REACT_APP_API_KEY;\n  const request = `http://api.weatherstack.com/current?access_key=${api_key}&query=${props.query}`;\n  const [weather, setWeather] = useState({});\n\n  const hook = () => {\n    axios.get(request).then(response => {\n      console.log(response.data);\n      setWeather(response.data.current);\n    });\n  };\n\n  const weatherIcons = icons => {\n    if (icons) {\n      return icons.map(icon => {\n        console.log('icon', icon);\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: icon,\n          alt: \"Weather Icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 16\n          }\n        });\n      });\n    }\n  };\n\n  useEffect(hook, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Weather in \", props.query), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }, \"temperature:\"), \" \", weather.temperature, \" Celsius\"), weatherIcons(weather.weather_icons), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  }, \"wind:\"), \" \", weather.wind_speed, \" mph direction \", weather.wind_dir));\n};\n\nconst Search = props => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const getSearchResults = (countries, searchTerm) => {\n    return countries.filter(country => {\n      return country.name.toUpperCase().includes(searchTerm.toUpperCase());\n    });\n  };\n\n  const updateSearchInput = event => {\n    setSearchTerm(event.target.value);\n    setSearchResults(getSearchResults(props.countries, event.target.value));\n  };\n\n  const showDetails = country => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, country.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"capital: \", country.capital), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"population: \", numberWithCommas(country.population)), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"languages\"), country.languages.map(language => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: language.iso639_2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, language.name);\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: country.flag,\n      alt: \"Flag\",\n      style: {\n        width: 150,\n        height: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      query: country.capital,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  function handleShowClick(identifier) {\n    const country = props.countries.filter(country => {\n      return country.numericCode === identifier;\n    });\n    setSearchResults(country);\n  }\n\n  const showResults = results => {\n    if (results.length > 10) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 14\n        }\n      }, \"Too many matches, specify another filter\");\n    } else if (results.length > 1 && results.length <= 10) {\n      return results.map(country => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: country.numericCode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }\n        }, country.name, \" \", /*#__PURE__*/React.createElement(IconButton, {\n          variant: \"contained\",\n          type: \"button\",\n          color: \"primary\",\n          text: \"show\",\n          icon: /*#__PURE__*/React.createElement(VisibilityIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 134\n            }\n          }),\n          handleClick: () => handleShowClick(country.numericCode),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 54\n          }\n        }));\n      });\n    } else if (results.length === 1) {\n      return showDetails(results[0]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"Search\",\n    value: searchTerm,\n    type: \"text\",\n    placeholder: \"enter a country\",\n    onInput: updateSearchInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 6\n    }\n  }, showResults(searchResults)));\n};\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n\n  const hook = () => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setCountries(response.data);\n    });\n  };\n\n  useEffect(hook, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    countries: countries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ludo/React/part2/countries/src/app.js"],"names":["React","useState","useEffect","Fragment","axios","Input","IconLabelButtons","VisibilityIcon","IconButton","props","variant","type","color","text","icon","handleClick","Weather","api_key","process","env","REACT_APP_API_KEY","request","query","weather","setWeather","hook","get","then","response","console","log","data","current","weatherIcons","icons","map","temperature","weather_icons","wind_speed","wind_dir","Search","searchTerm","setSearchTerm","searchResults","setSearchResults","getSearchResults","countries","filter","country","name","toUpperCase","includes","updateSearchInput","event","target","value","showDetails","capital","numberWithCommas","population","languages","language","iso639_2","flag","width","height","x","toString","replace","handleShowClick","identifier","numericCode","showResults","results","length","App","setCountries"],"mappings":"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","sourcesContent":["import './index.css';\n\nimport React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\n\nimport Input from '@material-ui/core/Input';\nimport IconLabelButtons from './iconbuttonlib';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nconst IconButton = (props) => {\n  return(\n    <span>\n      {IconLabelButtons(props.variant, props.type, props.color, props.text, props.icon, props.handleClick)}\n    </span>\n  )\n}\n\nconst Weather = (props) => {\n  const api_key = process.env.REACT_APP_API_KEY;\n  const request = `http://api.weatherstack.com/current?access_key=${api_key}&query=${props.query}`;\n\n  const [weather, setWeather] = useState({});\n\n  const hook = () => {\n    axios\n      .get(request)\n      .then(response => {\n        console.log(response.data);\n        setWeather(response.data.current);\n      })\n  }\n\n  const weatherIcons = (icons) => {\n    if(icons) {\n      return(icons.map((icon) => {\n        console.log('icon', icon);\n        return <img src={icon} alt=\"Weather Icon\" />\n      }));\n    }\n  }\n\n  useEffect(hook, []);\n\n  return(\n    <div>\n      <h2>Weather in {props.query}</h2>\n      <p><strong>temperature:</strong> {weather.temperature} Celsius</p>\n      {weatherIcons(weather.weather_icons)}\n      <p><strong>wind:</strong> {weather.wind_speed} mph direction {weather.wind_dir}</p>\n    </div>\n  )\n}\n\nconst Search = (props) => {\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const getSearchResults = (countries, searchTerm) => {\n    return countries.filter((country) => {\n      return country.name.toUpperCase().includes(searchTerm.toUpperCase());\n    });\n  }\n\n  const updateSearchInput = (event) => {\n    setSearchTerm(event.target.value);\n    setSearchResults(getSearchResults(props.countries, event.target.value));\n  }\n\n  const showDetails = (country) => {\n    return(\n      <Fragment>\n        <h1>{country.name}</h1>\n        <p>capital: {country.capital}</p>\n        <p>population: {numberWithCommas(country.population)}</p>\n        <h2>languages</h2>\n        {country.languages.map((language) => {\n          return (\n            <li \n              key={language.iso639_2}>{language.name}\n            </li>)\n          })}\n        <br></br>\n        <img src={country.flag} alt=\"Flag\" style={{width: 150, height: 100}}/>\n        <Weather query={country.capital} />\n      </Fragment>\n    )\n  }\n\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  function handleShowClick(identifier) {\n    const country = props.countries.filter((country) => {\n      return country.numericCode === identifier;\n    });\n\n    setSearchResults(country);\n  }\n\n  const showResults = (results) => {\n    if(results.length > 10) {\n      return <p>Too many matches, specify another filter</p>;\n    } else if(results.length > 1 && results.length <= 10) {\n      return results.map((country) => {\n        return (\n          <li \n            key={country.numericCode}>{country.name} <IconButton variant=\"contained\" type=\"button\" color=\"primary\" text=\"show\" icon={<VisibilityIcon/>} handleClick={() => handleShowClick(country.numericCode)} />\n          </li>)\n      })\n    } else if(results.length === 1) {\n      return showDetails(results[0]);\n    }\n  }\n\n  return(\n    <Fragment>\n      <div>\n        <Input name='Search' value={searchTerm} type=\"text\" placeholder='enter a country' onInput={updateSearchInput}/>\n      </div>\n      <br></br>\n     <div>\n       {showResults(searchResults)}\n     </div>\n    </Fragment>\n  )\n}\n\nconst App = () => {\n\n  const [countries, setCountries] = useState([]);\n\n  const hook = () => {\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(response => {\n        setCountries(response.data);\n      })\n  }\n\n  useEffect(hook, []);\n\n  return (\n    <div>\n      <Search countries={countries} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}