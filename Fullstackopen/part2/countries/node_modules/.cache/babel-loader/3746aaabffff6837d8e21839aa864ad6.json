{"ast":null,"code":"var _jsxFileName = \"/Users/ludo/React/part2/countries/src/app.js\";\nimport './index.css';\nimport React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport Input from '@material-ui/core/Input'; // import IconLabelButtons from './iconbuttonlib';\n// import VisibilityIcon from '@material-ui/icons/Visibility';\n\nconst Search = props => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const getSearchResults = (countries, searchTerm) => {\n    return countries.filter(country => {\n      return country.name.toUpperCase().includes(searchTerm.toUpperCase());\n    });\n  };\n\n  const updateSearchInput = event => {\n    setSearchTerm(event.target.value);\n    setSearchResults(getSearchResults(props.countries, event.target.value));\n  };\n\n  const showDetails = country => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"test\"));\n  };\n\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  const showResults = results => {\n    if (results.length > 10) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }\n      }, \"Too many matches, specify another filter\");\n    } else if (results.length > 1 && results.length <= 10) {\n      return results.map(country => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: country.numericCode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }\n        }, country.name);\n      });\n    } else if (results.length === 1) {\n      showDetails(results[0]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"Search\",\n    value: searchTerm,\n    type: \"text\",\n    placeholder: \"enter a country\",\n    onInput: updateSearchInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }\n  }, showResults(searchResults)));\n};\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n\n  const hook = () => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setCountries(response.data);\n    });\n  };\n\n  useEffect(hook, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    countries: countries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ludo/React/part2/countries/src/app.js"],"names":["React","useState","useEffect","Fragment","axios","Input","Search","props","searchTerm","setSearchTerm","searchResults","setSearchResults","getSearchResults","countries","filter","country","name","toUpperCase","includes","updateSearchInput","event","target","value","showDetails","numberWithCommas","x","toString","replace","showResults","results","length","map","numericCode","App","setCountries","hook","get","then","response","data"],"mappings":"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","sourcesContent":["import './index.css';\n\nimport React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\n\nimport Input from '@material-ui/core/Input';\n// import IconLabelButtons from './iconbuttonlib';\n// import VisibilityIcon from '@material-ui/icons/Visibility';\n\nconst Search = (props) => {\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const getSearchResults = (countries, searchTerm) => {\n    return countries.filter((country) => {\n      return country.name.toUpperCase().includes(searchTerm.toUpperCase());\n    });\n  }\n\n  const updateSearchInput = (event) => {\n    setSearchTerm(event.target.value);\n    setSearchResults(getSearchResults(props.countries, event.target.value));\n  }\n\n  const showDetails = (country) => {\n    return(\n      <Fragment>\n        {/* <h1>{country.name}</h1>\n        <p>capital: {country.capital}</p>\n        <p>population: {numberWithCommas(country.population)}</p>\n        <h2>languages</h2>\n        {country.languages.map((language) => {\n          return (\n            <li \n              key={language.iso639_2}>{language.name}\n            </li>)\n          })}\n        <br></br>\n        <img src={country.flag} alt=\"Flag\" style={{width: 150, height: 100}}/> */}\n        <p>test</p>\n      </Fragment>\n    )\n  }\n\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  const showResults = (results) => {\n    if(results.length > 10) {\n      return <p>Too many matches, specify another filter</p>;\n    } else if(results.length > 1 && results.length <= 10) {\n      return results.map((country) => {\n        return (\n          <li \n            key={country.numericCode}>{country.name}\n          </li>)\n      })\n    } else if(results.length === 1) {\n      showDetails(results[0]);\n    }\n  }\n\n  return(\n    <Fragment>\n      <div>\n        <Input name='Search' value={searchTerm} type=\"text\" placeholder='enter a country' onInput={updateSearchInput}/>\n      </div>\n      <br></br>\n     <div>\n       {showResults(searchResults)}\n     </div>\n    </Fragment>\n  )\n}\n\nconst App = () => {\n\n  const [countries, setCountries] = useState([]);\n\n  const hook = () => {\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(response => {\n        setCountries(response.data);\n      })\n  }\n\n  useEffect(hook, []);\n\n  return (\n    <div>\n      <Search countries={countries} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}