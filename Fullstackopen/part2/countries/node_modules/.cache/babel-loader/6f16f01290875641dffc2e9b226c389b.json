{"ast":null,"code":"var _jsxFileName = \"/Users/ludo/React/part2/countries/src/app.js\";\nimport './index.css';\nimport React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport Input from '@material-ui/core/Input';\n\nconst Search = props => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const getSearchResults = (countries, searchTerm) => {\n    return countries.filter(country => {\n      return country.name.toUpperCase().includes(searchTerm.toUpperCase());\n    });\n  };\n\n  const updateSearchInput = event => {\n    setSearchTerm(event.target.value);\n    setSearchResults(getSearchResults(props.countries, searchTerm));\n  };\n\n  const showResults = () => {\n    if (searchResults.length > 10) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 14\n        }\n      }, \"Too many results\");\n    } else {\n      searchResults.map(country => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: country.numericCode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }\n        }, country.name);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"Search\",\n    value: searchTerm,\n    type: \"text\",\n    placeholder: \"enter a country\",\n    onInput: updateSearchInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }\n  }, showResults()));\n};\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n\n  const hook = () => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      console.log('promise fulfilled', response.data);\n      setCountries(response.data);\n    });\n  };\n\n  useEffect(hook, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    countries: countries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ludo/React/part2/countries/src/app.js"],"names":["React","useState","useEffect","Fragment","axios","Input","Search","props","searchTerm","setSearchTerm","searchResults","setSearchResults","getSearchResults","countries","filter","country","name","toUpperCase","includes","updateSearchInput","event","target","value","showResults","length","map","numericCode","App","setCountries","hook","get","then","response","console","log","data"],"mappings":";AAAA,OAAO,aAAP;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAExB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMW,gBAAgB,GAAG,CAACC,SAAD,EAAYL,UAAZ,KAA2B;AAClD,WAAOK,SAAS,CAACC,MAAV,CAAkBC,OAAD,IAAa;AACnC,aAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCV,UAAU,CAACS,WAAX,EAApC,CAAP;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,QAAME,iBAAiB,GAAIC,KAAD,IAAW;AACnCX,IAAAA,aAAa,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACAX,IAAAA,gBAAgB,CAACC,gBAAgB,CAACL,KAAK,CAACM,SAAP,EAAkBL,UAAlB,CAAjB,CAAhB;AACD,GAHD;;AAKA,QAAMe,WAAW,GAAG,MAAM;AACxB,QAAGb,aAAa,CAACc,MAAd,GAAuB,EAA1B,EAA8B;AAC5B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD,KAFD,MAEO;AACLd,MAAAA,aAAa,CAACe,GAAd,CAAmBV,OAAD,IAAa;AAC7B,4BACE;AACE,UAAA,GAAG,EAAEA,OAAO,CAACW,WADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAC6BX,OAAO,CAACC,IADrC,CADF;AAID,OALD;AAMD;AACF,GAXD;;AAaA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAER,UAA5B;AAAwC,IAAA,IAAI,EAAC,MAA7C;AAAoD,IAAA,WAAW,EAAC,iBAAhE;AAAkF,IAAA,OAAO,EAAEW,iBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,WAAW,EADd,CALD,CADF;AAWD,CAxCD;;AA0CA,MAAMI,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACd,SAAD,EAAYe,YAAZ,IAA4B3B,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAM4B,IAAI,GAAG,MAAM;AACjBzB,IAAAA,KAAK,CACF0B,GADH,CACO,sCADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,QAAQ,CAACG,IAA1C;AACAP,MAAAA,YAAY,CAACI,QAAQ,CAACG,IAAV,CAAZ;AACD,KALH;AAMD,GAPD;;AASAjC,EAAAA,SAAS,CAAC2B,IAAD,EAAO,EAAP,CAAT;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEhB,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CApBD;;AAsBA,eAAec,GAAf","sourcesContent":["import './index.css';\n\nimport React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\n\nimport Input from '@material-ui/core/Input';\n\nconst Search = (props) => {\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const getSearchResults = (countries, searchTerm) => {\n    return countries.filter((country) => {\n      return country.name.toUpperCase().includes(searchTerm.toUpperCase());\n    });\n  }\n\n  const updateSearchInput = (event) => {\n    setSearchTerm(event.target.value);\n    setSearchResults(getSearchResults(props.countries, searchTerm));\n  }\n\n  const showResults = () => {\n    if(searchResults.length > 10) {\n      return <p>Too many results</p>;\n    } else {\n      searchResults.map((country) => {\n        return (\n          <li \n            key={country.numericCode}>{country.name}\n          </li>)\n      })\n    }\n  }\n\n  return(\n    <Fragment>\n      <div>\n        <Input name='Search' value={searchTerm} type=\"text\" placeholder='enter a country' onInput={updateSearchInput}/>\n      </div>\n    <br></br>\n     <div>\n       {showResults()}\n     </div>\n    </Fragment>\n  )\n}\n\nconst App = () => {\n\n  const [countries, setCountries] = useState([]);\n\n  const hook = () => {\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(response => {\n        console.log('promise fulfilled', response.data);\n        setCountries(response.data);\n      })\n  }\n\n  useEffect(hook, []);\n\n  return (\n    <div>\n      <Search countries={countries} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}