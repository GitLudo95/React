{"ast":null,"code":"var _jsxFileName = \"/Users/ludo/React/unicafe/src/index.js\";\nimport React, { useState, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport IconLabelButtons from './iconbuttonlib';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbsUpDownIcon from '@material-ui/icons/ThumbsUpDown';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\n\nconst DisplayStatistic = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, props.statistic, \" : \", props.amount));\n};\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGoodClick = () => setGood(good + 1);\n\n  const handleNeutralClick = () => setNeutral(neutral + 1);\n\n  const handleBadClick = () => setBad(bad + 1);\n\n  const all = good + neutral + bad || 0;\n  const average = (good - bad) / all || 0;\n  const positive = (good / all * 100 || 0) + '%';\n  const hasFeedback = all > 0;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"give feedback\"), IconLabelButtons(\"contained\", \"primary\", \"good\", /*#__PURE__*/React.createElement(ThumbUpIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 57\n    }\n  }), handleGoodClick), IconLabelButtons(\"contained\", \"default\", \"neutral\", /*#__PURE__*/React.createElement(ThumbsUpDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 60\n    }\n  }), handleNeutralClick), IconLabelButtons(\"contained\", \"secondary\", \"bad\", /*#__PURE__*/React.createElement(ThumbDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 58\n    }\n  }), handleBadClick), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"statistics\"), hasFeedback ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DisplayStatistic, {\n    statistic: \"good\",\n    amount: good,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(DisplayStatistic, {\n    statistic: \"neutral\",\n    amount: neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(DisplayStatistic, {\n    statistic: \"bad\",\n    amount: bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(DisplayStatistic, {\n    statistic: \"all\",\n    amount: all,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(DisplayStatistic, {\n    statistic: \"average\",\n    amount: average,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(DisplayStatistic, {\n    statistic: \"positive\",\n    amount: positive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"No feedback given\"));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/ludo/React/unicafe/src/index.js"],"names":["React","useState","Fragment","ReactDOM","IconLabelButtons","ThumbUpIcon","ThumbsUpDownIcon","ThumbDownIcon","DisplayStatistic","props","statistic","amount","App","good","setGood","neutral","setNeutral","bad","setBad","handleGoodClick","handleNeutralClick","handleBadClick","all","average","positive","hasFeedback","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css';\n\nimport IconLabelButtons from './iconbuttonlib';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbsUpDownIcon from '@material-ui/icons/ThumbsUpDown';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\n\nconst DisplayStatistic = (props) => {\n  return(\n    <div>\n      <p>{props.statistic} : {props.amount}</p>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGoodClick = () => setGood(good + 1);\n  const handleNeutralClick = () => setNeutral(neutral + 1);\n  const handleBadClick = () => setBad(bad + 1);\n\n  const all = (good + neutral + bad) || 0;\n  const average = ((good - bad) / all) || 0;\n  const positive = (((good / all) * 100) || 0) + '%';\n\n  const hasFeedback = all > 0;\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      {IconLabelButtons(\"contained\", \"primary\", \"good\", <ThumbUpIcon/>, handleGoodClick)}\n      {IconLabelButtons(\"contained\", \"default\", \"neutral\", <ThumbsUpDownIcon/>, handleNeutralClick)}\n      {IconLabelButtons(\"contained\", \"secondary\", \"bad\", <ThumbDownIcon/>, handleBadClick)}\n      <h1>statistics</h1>\n      {hasFeedback ? (\n        <Fragment>\n          <DisplayStatistic statistic={\"good\"} amount={good}/>\n          <DisplayStatistic statistic={\"neutral\"} amount={neutral}/>\n          <DisplayStatistic statistic={\"bad\"} amount={bad}/>\n          <DisplayStatistic statistic={\"all\"} amount={all}/>\n          <DisplayStatistic statistic={\"average\"} amount={average}/>\n          <DisplayStatistic statistic={\"positive\"} amount={positive}/>\n        </Fragment>\n      ) : (\n        <p>No feedback given</p>\n      )}\n    </div>\n  )\n}\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}