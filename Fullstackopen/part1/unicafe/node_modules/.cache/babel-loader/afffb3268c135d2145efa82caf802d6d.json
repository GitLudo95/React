{"ast":null,"code":"var _jsxFileName = \"/Users/ludo/React/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport IconLabelButtons from './iconbuttonlib';\nimport ThumbsUp from '@material-ui/icons/Check';\nimport ThumbsDown from '@material-ui/icons/Check';\nimport ThumbsUpDown from '@material-ui/icons/Check';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGoodClick = () => setGood(good + 1);\n\n  const handleNeutralClick = () => setNeutral(neutral + 1);\n\n  const handleBadClick = () => setBad(bad + 1);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"give feedback\"), IconLabelButtons(\"contained\", \"primary\", \"good\", /*#__PURE__*/React.createElement(ThumbsUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 57\n    }\n  }), handleGoodClick), IconLabelButtons(\"contained\", \"primary\", \"neutral\", /*#__PURE__*/React.createElement(ThumbsUpDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 60\n    }\n  }), handleNeutralClick), IconLabelButtons(\"contained\", \"primary\", \"bad\", /*#__PURE__*/React.createElement(ThumbsDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 56\n    }\n  }), handleBadClick));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/ludo/React/unicafe/src/index.js"],"names":["React","useState","ReactDOM","IconLabelButtons","ThumbsUp","ThumbsDown","ThumbsUpDown","App","good","setGood","neutral","setNeutral","bad","setBad","handleGoodClick","handleNeutralClick","handleBadClick","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,gBAAP,MAA6B,iBAA7B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMa,eAAe,GAAG,MAAML,OAAO,CAACD,IAAI,GAAG,CAAR,CAArC;;AACA,QAAMO,kBAAkB,GAAG,MAAMJ,UAAU,CAACD,OAAO,GAAG,CAAX,CAA3C;;AACA,QAAMM,cAAc,GAAG,MAAMH,MAAM,CAACD,GAAG,GAAG,CAAP,CAAnC;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEGT,gBAAgB,CAAC,WAAD,EAAc,SAAd,EAAyB,MAAzB,eAAiC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjC,EAA8CW,eAA9C,CAFnB,EAGGX,gBAAgB,CAAC,WAAD,EAAc,SAAd,EAAyB,SAAzB,eAAoC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApC,EAAqDY,kBAArD,CAHnB,EAIGZ,gBAAgB,CAAC,WAAD,EAAc,SAAd,EAAyB,KAAzB,eAAgC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,EAA+Ca,cAA/C,CAJnB,CADF;AAQD,CAjBD;;AAmBAd,QAAQ,CAACe,MAAT,eACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport IconLabelButtons from './iconbuttonlib'\nimport ThumbsUp from '@material-ui/icons/Check';\nimport ThumbsDown from '@material-ui/icons/Check';\nimport ThumbsUpDown from '@material-ui/icons/Check';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGoodClick = () => setGood(good + 1);\n  const handleNeutralClick = () => setNeutral(neutral + 1);\n  const handleBadClick = () => setBad(bad + 1);\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      {IconLabelButtons(\"contained\", \"primary\", \"good\", <ThumbsUp/>, handleGoodClick)}\n      {IconLabelButtons(\"contained\", \"primary\", \"neutral\", <ThumbsUpDown/>, handleNeutralClick)}\n      {IconLabelButtons(\"contained\", \"primary\", \"bad\", <ThumbsDown/>, handleBadClick)}\n    </div>\n  )\n}\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}